<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="club.kwcoder.vote.mapper.generate.VoteMapper">
    <resultMap id="BaseResultMap" type="club.kwcoder.vote.dataobject.VoteDO">
        <id column="vote_id" jdbcType="INTEGER" property="voteId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_timestamp" jdbcType="TIMESTAMP" property="createTimestamp"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="deadline" jdbcType="TIMESTAMP" property="deadline"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        vote_id, `status`, create_timestamp, title, description, deadline
    </sql>
    <select id="selectByExample" parameterType="club.kwcoder.vote.dataobject.VoteDOExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from vote
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from vote
        where vote_id = #{voteId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from vote
        where vote_id = #{voteId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="club.kwcoder.vote.dataobject.VoteDOExample">
        delete from vote
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="club.kwcoder.vote.dataobject.VoteDO">
        insert into vote (vote_id, `status`, create_timestamp,
                          title, description, deadline)
        values (#{voteId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTimestamp,jdbcType=TIMESTAMP},
                #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{deadline,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="club.kwcoder.vote.dataobject.VoteDO" useGeneratedKeys="true"
            keyProperty="voteId" keyColumn="vote_id">
        insert into vote
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="voteId != null">
                vote_id,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTimestamp != null">
                create_timestamp,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="deadline != null">
                deadline,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="voteId != null">
                #{voteId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTimestamp != null">
                #{createTimestamp,jdbcType=TIMESTAMP},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="deadline != null">
                #{deadline,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="club.kwcoder.vote.dataobject.VoteDOExample" resultType="java.lang.Long">
        select count(*) from vote
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update vote
        <set>
            <if test="record.voteId != null">
                vote_id = #{record.voteId,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                `status` = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.createTimestamp != null">
                create_timestamp = #{record.createTimestamp,jdbcType=TIMESTAMP},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.deadline != null">
                deadline = #{record.deadline,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update vote
        set vote_id = #{record.voteId,jdbcType=INTEGER},
        `status` = #{record.status,jdbcType=INTEGER},
        create_timestamp = #{record.createTimestamp,jdbcType=TIMESTAMP},
        title = #{record.title,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        deadline = #{record.deadline,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="club.kwcoder.vote.dataobject.VoteDO">
        update vote
        <set>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTimestamp != null">
                create_timestamp = #{createTimestamp,jdbcType=TIMESTAMP},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="deadline != null">
                deadline = #{deadline,jdbcType=TIMESTAMP},
            </if>
        </set>
        where vote_id = #{voteId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="club.kwcoder.vote.dataobject.VoteDO">
        update vote
        set `status`         = #{status,jdbcType=INTEGER},
            create_timestamp = #{createTimestamp,jdbcType=TIMESTAMP},
            title            = #{title,jdbcType=VARCHAR},
            description      = #{description,jdbcType=VARCHAR},
            deadline         = #{deadline,jdbcType=TIMESTAMP}
        where vote_id = #{voteId,jdbcType=INTEGER}
    </update>
</mapper>